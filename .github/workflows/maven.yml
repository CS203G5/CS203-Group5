name: Java CI with Maven and External Database

on:
  push:
    branches:
      - main  
      - ci-test
  pull_request:
    branches:
      - main 

jobs:
  test:
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        run: |
          echo "AWS credentials set."

      - name: Build with Maven
        run: |
          mvn clean install -DskipTests
  
      - name: Generate JWT Token
        run: |
          # You can either call a script or execute a Java class to generate the JWT token.
          # This assumes you have a Java class to generate the token in your project.
          
          # Example: Use a simple Java command to generate the token
          export JWT_TOKEN=$(mvn exec:java -Dexec.mainClass="com.yourpackage.CognitoAuthUtils" -Dexec.args="khairyo Hello12.")
          echo "JWT token generated: $JWT_TOKEN"
          echo "JWT_TOKEN=$JWT_TOKEN" >> $GITHUB_ENV  # Save the token as an environment variable for later steps
  
      - name: Test with Maven
        env:
          JWT_TOKEN: ${{ env.JWT_TOKEN }}  # Pass the JWT token to the test environment
        run: |
          mvn clean test -Dspring.profiles.active=ci
