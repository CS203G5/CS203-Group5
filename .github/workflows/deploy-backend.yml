name: Build and Deploy Backend to EC2

on:
  push:
    branches:
      - main  # Trigger deployment only on pushes to the main branch
      - ci-cd  # Also trigger deployment on pushes to the ci-cd branch for testing purposes
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          mvn -B package --file backend/pom.xml -DskipTests
          mkdir artifacts && cp backend/target/*.jar artifacts
          cd artifacts && ls
      - name: Save artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-action-artifact
          path: artifacts

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: SSH into EC2 and deploy Docker container
        env:
            DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
            MYSQL_URL: ${{ secrets.MYSQL_URL }}
            MYSQL_USER: ${{ secrets.MYSQL_USER }}
            MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_GENERAL_USER }}@${{ secrets.EC2_BACKEND_HOST }} << 'EOF'
            # Export environment variables for use in the SSH session
            export DOCKERHUB_USERNAME='${{ secrets.DOCKERHUB_USERNAME }}'
            export MYSQL_URL='${{ secrets.MYSQL_URL }}'
            export MYSQL_USER='${{ secrets.MYSQL_USER }}'
            export MYSQL_PASSWORD='${{ secrets.MYSQL_PASSWORD }}'

            # Pull the latest image from Docker Hub
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/backend-app:latest
            
            # Remove the old container if it exists
            sudo docker rm -f backend-container || true
            
            # Run the new Docker container
              sudo docker run -d \
              --name backend-container \
              --restart unless-stopped \
              -p 8080:8080 \
              -e DB_URL="$MYSQL_URL" \
              -e DB_USERNAME="$MYSQL_USER" \
              -e DB_PASSWORD="$MYSQL_PASSWORD" \
              $DOCKERHUB_USERNAME/backend-app:latest
          EOF