name: Build and Deploy Backend to EC2

on:
  push:
    branches:
      - main
      - ci-cd
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH keys
        env:
          BASTION_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo -e "$BASTION_KEY" > ~/.ssh/bastion_key
          chmod 600 ~/.ssh/bastion_key
          cat > ~/.ssh/config << 'EOF'
          Host bastion
              HostName ${{ secrets.EC2_FRONTEND_HOST }}
              User ubuntu
              IdentityFile ~/.ssh/bastion_key
              StrictHostKeyChecking no
              UserKnownHostsFile=/dev/null
          Host private
              HostName 10.0.144.241
              User ubuntu
              IdentityFile ~/.ssh/bastion_key
              StrictHostKeyChecking no
              UserKnownHostsFile=/dev/null
              ProxyCommand ssh -W %h:%p bastion
          EOF

      - name: Test SSH connection
        run: ssh private "echo 'Successfully connected to private instance'"

      - name: Deploy Backend to EC2
        env:
          MYSQL_URL: ${{ secrets.MYSQL_URL }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: |
          ssh private << 'EOF'
            # Export environment variables for the backend app
            export DB_URL="${MYSQL_URL}"
            export DB_USERNAME="${MYSQL_USER}"
            export DB_PASSWORD="${MYSQL_PASSWORD}"

            echo "Starting deployment on private instance..."

            # Clone the latest code from GitHub
            cd /home/ubuntu
            rm -rf cs203-group5 || true
            git clone https://github.com/CS203G5/CS203-Group5.git
            cd ~/CS203-Group5/backend

            # Set up environment variables for the Spring Boot app
            echo "DB_URL=${DB_URL}" > .env
            echo "DB_USERNAME=${DB_USERNAME}" >> .env
            echo "DB_PASSWORD=${DB_PASSWORD}" >> .env

            # Build the application using Maven (skip tests for faster deployment)
            ./mvnw clean package -DskipTests

            # Copy the JAR file to a known location
            cp target/*.jar /home/ubuntu/backend-app.jar

            # Set up systemd service to manage the Spring Boot application
            sudo tee /etc/systemd/system/backend-app.service > /dev/null <<'EOL'
            [Unit]
            Description=Backend Spring Boot Application
            After=network.target

            [Service]
            User=ubuntu
            EnvironmentFile=/home/ubuntu/CS203-Group5/backend/.env
            ExecStart=/usr/bin/java -jar /home/ubuntu/backend-app.jar >> /home/ubuntu/backend-app.log 2>&1
            SuccessExitStatus=143
            Restart=always
            RestartSec=10

            [Install]
            WantedBy=multi-user.target
            EOL

            # Reload systemd and start the backend service
            sudo systemctl daemon-reload
            sudo systemctl enable backend-app
            sudo systemctl restart backend-app

            # Verify the service status
            sudo systemctl status backend-app --no-pager
          EOF
