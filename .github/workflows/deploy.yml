name: Build and Deploy to EC2

on:
  push:
    branches:
      - main  # Trigger deployment only on pushes to the main branch
      - ci-cd  # Also trigger deployment on pushes to the ci-cd branch for testing purposes
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven


      - name: Build with Maven
        run: mvn -B package --file backend/pom.xml -DskipTests=true

    #   - name: Send Email on Failure
    #     if: failure()
    #     env:
    #       SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
    #       SMTP_PORT: ${{ secrets.SMTP_PORT }}
    #       SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
    #       SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
    #       TO_EMAIL: ${{ secrets.TO_EMAIL }}
    #       FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
    #     run: |
    #       echo -e "Subject: GitHub Actions Pipeline Failed\n\nPipeline failed for Job: ${{ github.job }} in ${{ github.repository }}. Commit: ${{ github.sha }}" | \
    #       sendmail -S $SMTP_SERVER -p $SMTP_PORT -au$SMTP_USERNAME -ap$SMTP_PASSWORD -f $FROM_EMAIL $TO_EMAIL

      - name: Set up SSH
        env:
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "$EC2_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Copy JAR to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i ec2_key.pem ./app.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.EC2_APP_PATH }}/app.jar

      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          sudo systemctl stop myapp.service || true  # Stop any running instance of the app
          sudo mv ${EC2_APP_PATH}/app.jar /opt/myapp/app.jar
          sudo systemctl start myapp.service  # Restart the service
          EOF
